{"version":3,"sources":["context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","components/layout/Header.js","components/pages/About.js","components/pages/NotFound.js","components/test/Test.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","Object","objectSpread","contacts","filter","contact","id","payload","concat","toConsumableArray","map","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","dispatch","setState","inherits","createClass","key","value","_componentDidMount","asyncToGenerator","regenerator_default","a","mark","_callee","res","wrap","_context","prev","next","axios","get","sent","data","stop","react_default","createElement","props","children","Component","Consumer","Contact","showContactInfo","switchArrow","onShowClick","e","preventDefault","onDeleteClick","delete","t0","_this2","_this$props$contact","name","email","phone","_this$state","className","onClick","style","cursor","react_router_dom","to","color","float","bind","defaultProps","Contacts","Fragment","contacts_Contact","TextInputGroup","_ref","label","placeholder","onChange","error","htmlFor","classnames","is-invalid","AddContact","errors","defineProperty","target","onSubmit","newContact","abrupt","post","history","push","_this$state2","layout_TextInputGroup","EditContact","updContact","match","params","put","Header","brand","href","aria-hidden","About","notFound","Test","title","body","fetch","then","response","json","App","context_Provider","layout_Header","react_router","exact","path","component","NotFound","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4bce3fb1.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Context = React.createContext();\r\n\r\nconst reducer = (state, action) =>{\r\n  switch(action.type){\r\n    case 'DELETE_CONTACT':\r\n      return{\r\n        ...state,\r\n        contacts: state.contacts.filter(contact => contact.id !== action.payload)\r\n      };\r\n    case 'ADD_CONTACT':\r\n      return{\r\n        ...state,\r\n        contacts: [action.payload, ...state.contacts]\r\n      };\r\n      case 'UPDATE_CONTACT':\r\n      return{\r\n        ...state,\r\n        contacts: state.contacts.map(\r\n          contact => \r\n            contact.id === action.payload.id \r\n            ? (contact = action.payload) \r\n            : contact)\r\n      };\r\n    default:\r\n      return state;\r\n  } \r\n}\r\nexport class Provider extends Component{\r\n  state ={\r\n    contacts: [],\r\n    dispatch: action => this.setState(state => reducer(state, action))\r\n  }\r\n\r\n// match users from jsonplacholder using axios npm\r\n  async componentDidMount(){\r\n    const res = await axios.get('https://jsonplaceholder.typicode.com/users')\r\n\r\n    this.setState({contacts: res.data})\r\n  }\r\n\r\n  render(){\r\n    return(\r\n      <Context.Provider value={this.state}>\r\n      {this.props.children}\r\n      </Context.Provider>\r\n    )\r\n  }\r\n}\r\n\r\nexport const Consumer = Context.Consumer; // чтоб потом писать <Consumer> а не <Context.Consumer>","import React, { Component } from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { Consumer } from '../../context';\r\nimport axios from 'axios';\r\n\r\nclass Contact extends Component {\r\n  state={\r\n    showContactInfo: false,\r\n    switchArrow: false\r\n  }\r\n\r\n  onShowClick = e => {\r\n    e.preventDefault();\r\n    this.setState({showContactInfo: !this.state.showContactInfo})\r\n    this.setState({switchArrow: !this.state.switchArrow})\r\n  }\r\n  onDeleteClick = async (id, dispatch) =>{\r\n    try{\r\n      await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`)\r\n      dispatch({type: 'DELETE_CONTACT', payload: id})\r\n    } catch(e){\r\n      dispatch({type: 'DELETE_CONTACT', payload: id})\r\n    }   \r\n  }\r\n\r\n\r\n  render() {\r\n    const {id, name, email, phone} = this.props.contact;\r\n    const { showContactInfo, switchArrow } = this.state;\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const {dispatch} = value\r\n          return(\r\n          <div className=\"card mb-3 p-2\">\r\n            {switchArrow ? <h4>{name} <i onClick={this.onShowClick} className=\"fas fa-arrow-up\" style={{cursor: 'pointer'}}></i></h4> :\r\n            <h4>{name} <i onClick={this.onShowClick} className=\"fas fa-arrow-down\" style={{cursor: 'pointer'}}></i></h4>}\r\n            <Link to={`contact/edit/${id}`}>\r\n            <i className=\"fas fa-pencil-alt\" style={{\r\n              cursor: 'pointer',\r\n              color: 'grey'\r\n            }}></i>\r\n            </Link>\r\n            <i className=\"fas fa-times\" style={{cursor: 'pointer', float: 'right', color: 'red'}} onClick={this.onDeleteClick.bind(this, id, dispatch)}></i>\r\n            {showContactInfo ? <ul className=\"list-group\">\r\n            <li className=\"list-group-item\">{email}</li>\r\n            <li className=\"list-group-item\">{phone}</li>\r\n            </ul> : null}\r\n          </div>\r\n          )\r\n        }}\r\n      </Consumer>     \r\n    )\r\n  }\r\n}\r\n\r\nContact.defaultProps ={\r\n  name: 'Lel',\r\n  email: 'me@gmail.com',\r\n  phone: '555-555'\r\n}\r\n\r\nContact.propTypes = {\r\n  contact: PropTypes.object.isRequired\r\n}\r\n\r\nexport default  Contact;","import React, { Component } from 'react';\r\nimport Contact from './Contact';\r\nimport {Consumer} from '../../context';\r\n\r\n\r\nclass Contacts extends Component {\r\n\r\n  render() {\r\n    return(\r\n      <Consumer>\r\n        {value => {\r\n          const {contacts} = value;\r\n          return(\r\n            <React.Fragment>\r\n              <h1 className=\"display-4 mb-2\">\r\n              Contact List\r\n              </h1>\r\n              {contacts.map(contact => (\r\n                <Contact \r\n                  key={contact.id}\r\n                  contact={contact}/>\r\n              ))}\r\n            </React.Fragment>\r\n          )\r\n        }}\r\n      </Consumer>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Contacts;","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport classnames from 'classnames';\r\n\r\n\r\nconst TextInputGroup = ({ //list of props of TextInputGroup\r\n  label,\r\n  name,\r\n  value,\r\n  placeholder,\r\n  type,\r\n  onChange,\r\n  error\r\n}) => {\r\n  \r\n  return (\r\n    <div className=\"form-group\">\r\n      <label htmlFor=\"{name}\">{label}</label>\r\n      <input \r\n        type={type} \r\n        name={name}\r\n        className = {classnames('form-control form-control-lg', {\r\n          'is-invalid': error\r\n        })}\r\n        placeholder={placeholder}\r\n        value={value}\r\n        onChange={onChange}\r\n       />\r\n       {error && <div className=\"invalid-feedback\">{error}</div>}\r\n       \r\n      </div>\r\n  )\r\n}\r\n\r\nTextInputGroup.propTypes ={\r\n  name: PropTypes.string.isRequired,\r\n  placeholder: PropTypes.string.isRequired,\r\n  value: PropTypes.string.isRequired,\r\n  type: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n  label: PropTypes.string.isRequired,\r\n  error: PropTypes.string.isRequired\r\n}\r\n\r\nTextInputGroup.defaultProps ={\r\n  type: 'text'\r\n}\r\n\r\nexport default TextInputGroup;","import React, { Component } from 'react';\r\nimport { Consumer } from '../../context';\r\nimport TextInputGroup from '../layout/TextInputGroup';\r\nimport axios from 'axios';\r\n\r\n\r\nclass AddContact extends Component {\r\n  state={\r\n    name: '',\r\n    email: '',\r\n    phone: '',\r\n    errors: {}\r\n  }\r\n\r\n  onChange = e => this.setState({[e.target.name]: e.target.value}) // name котроый NAME=\"email\" NAME=\"phone\" NAME=\"name\"\r\n  \r\n  onSubmit = async (dispatch, e) => {\r\n    e.preventDefault();\r\n    const {name, email, phone} = this.state;\r\n\r\n    // Check For Errors\r\n    if (name === '') {\r\n      this.setState({errors: {name: 'Name os required'}})\r\n      return;\r\n    }\r\n    if (email === '') {\r\n      this.setState({errors: {email: 'Email os required'}})\r\n      return;\r\n    }\r\n    if (phone === '') {\r\n      this.setState({errors: {phone: 'Phone os required'}})\r\n      return;\r\n    }\r\n\r\n    const newContact = {\r\n      name,\r\n      email,\r\n      phone\r\n    }\r\n\r\n   const res = await axios.post(`https://jsonplaceholder.typicode.com/users/`, newContact)\r\n    \r\n   dispatch({type: 'ADD_CONTACT', payload: res.data})\r\n\r\n    // Для очистки поля\r\n    this.setState({\r\n      name: '',\r\n      email: '',\r\n      phone: '',\r\n      errors: {}\r\n    })\r\n    \r\n    // redirect to home page\r\n    this.props.history.push('/')\r\n  }\r\n\r\n  render() {\r\n    const { name, email, phone, errors}= this.state;\r\n\r\n    return(\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return(\r\n            <div className=\"card mb-3\">\r\n              <div className=\"card-header\">Add Contact</div>\r\n              <div className=\"card-body\">\r\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                  <TextInputGroup \r\n                    label=\"Name\"\r\n                    name=\"name\"\r\n                    placeholder=\"Enter Name\"\r\n                    value={name}\r\n                    onChange={this.onChange}\r\n                    error={errors.name}\r\n                  />\r\n                  <TextInputGroup \r\n                    label=\"Email\"\r\n                    name=\"email\"\r\n                    type=\"Email\"\r\n                    placeholder=\"Enter Email\"\r\n                    value={email}\r\n                    onChange={this.onChange}\r\n                    error={errors.email}\r\n                  />\r\n                  <TextInputGroup \r\n                    label=\"Phone\"\r\n                    name=\"phone\"\r\n                    placeholder=\"Enter Phone\"\r\n                    value={phone}\r\n                    onChange={this.onChange}\r\n                    error={errors.phone}\r\n                  />\r\n                  <input \r\n                    type=\"submit\" \r\n                    value=\"Add Contact\" \r\n                    className=\"btn btn-block btn-dark\"\r\n                    />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          )\r\n        }}\r\n      </Consumer>\r\n    )\r\n  }\r\n}\r\n\r\nexport default  AddContact;","import React, { Component } from 'react';\r\nimport { Consumer } from '../../context';\r\nimport TextInputGroup from '../layout/TextInputGroup';\r\nimport axios from 'axios';\r\n\r\n\r\nclass EditContact extends Component {\r\n  state={\r\n    name: '',\r\n    email: '',\r\n    phone: '',\r\n    errors: {}\r\n  }\r\n  async componentDidMount(){\r\n    const {id} = this.props.match.params;\r\n    const res = await axios.get(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n    \r\n    const contact = res.data;\r\n\r\n    this.setState({\r\n      name: contact.name,\r\n      email: contact.email,\r\n      phone: contact.phone\r\n    })\r\n  }\r\n  onChange = e => this.setState({[e.target.name]: e.target.value}) // name котроый NAME=\"email\" NAME=\"phone\" NAME=\"name\"\r\n  \r\n  onSubmit = async (dispatch, e) => {\r\n    e.preventDefault();\r\n    const {name, email, phone} = this.state;\r\n\r\n    // Check For Errors\r\n    if (name === '') {\r\n      this.setState({errors: {name: 'Name os required'}})\r\n      return;\r\n    }\r\n    if (email === '') {\r\n      this.setState({errors: {email: 'Email os required'}})\r\n      return;\r\n    }\r\n    if (phone === '') {\r\n      this.setState({errors: {phone: 'Phone os required'}})\r\n      return;\r\n    }\r\n\r\n    const updContact ={\r\n      name,\r\n      email,\r\n      phone\r\n    }\r\n    const { id } = this.props.match.params;\r\n\r\n    const res = await axios.put(`https://jsonplaceholder.typicode.com/users/${id}`, updContact)\r\n\r\n    dispatch({type: 'UPDATE_CONTACT', payload: res.data})\r\n\r\n\r\n    // Для очистки поля\r\n    this.setState({\r\n      name: '',\r\n      email: '',\r\n      phone: '',\r\n      errors: {}\r\n    })\r\n    \r\n    // redirect to home page\r\n    this.props.history.push('/')\r\n  }\r\n\r\n  render() {\r\n    const { name, email, phone, errors}= this.state;\r\n\r\n    return(\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return(\r\n            <div className=\"card mb-3\">\r\n              <div className=\"card-header\">Edit Contact</div>\r\n              <div className=\"card-body\">\r\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                  <TextInputGroup \r\n                    label=\"Name\"\r\n                    name=\"name\"\r\n                    placeholder=\"Enter Name\"\r\n                    value={name}\r\n                    onChange={this.onChange}\r\n                    error={errors.name}\r\n                  />\r\n                  <TextInputGroup \r\n                    label=\"Email\"\r\n                    name=\"email\"\r\n                    type=\"Email\"\r\n                    placeholder=\"Enter Email\"\r\n                    value={email}\r\n                    onChange={this.onChange}\r\n                    error={errors.email}\r\n                  />\r\n                  <TextInputGroup \r\n                    label=\"Phone\"\r\n                    name=\"phone\"\r\n                    placeholder=\"Enter Phone\"\r\n                    value={phone}\r\n                    onChange={this.onChange}\r\n                    error={errors.phone}\r\n                  />\r\n                  <input \r\n                    type=\"submit\" \r\n                    value=\"Update Contact\" \r\n                    className=\"btn btn-block btn-dark\"\r\n                    />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          )\r\n        }}\r\n      </Consumer>\r\n    )\r\n  }\r\n}\r\n\r\nexport default  EditContact;","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Header(props) {\r\n  const {brand} = props;\r\n  return (\r\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\r\n      <a href=\"/\" className=\"navbar-brand\">{brand}</a>\r\n      <div>\r\n        <ul className=\"navbar-nav mr-auto\">\r\n          <li className=\"nav-item\">\r\n            <Link to=\"/\" className=\"nav-link\"> <i className=\"fa fa-home\" aria-hidden=\"true\"></i> Home</Link>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <Link to=\"/contact/add\" className=\"nav-link\"> <i className=\"fa fa-plus\" aria-hidden=\"true\"></i> Add</Link>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <Link to=\"/about\" className=\"nav-link\"> <i className=\"fa fa-info\" aria-hidden=\"true\"></i> About</Link>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </nav>\r\n  )\r\n}\r\n\r\nHeader.defaultProps ={\r\n  brand: 'My App'\r\n}\r\n\r\nHeader.propTypes = {\r\n  brand: PropTypes.string.isRequired\r\n}\r\n\r\n// const headingStyle = {\r\n//   color: 'green',\r\n//   fontSize: '20px'\r\n// }\r\n\r\nexport default  Header;","import React from 'react'\r\n\r\nexport default function About() {\r\n  return (\r\n    <div>\r\n      <h1 className=\"display-4\">About page</h1>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function notFound() {\r\n  return (\r\n    <div>\r\n      <h1 className=\"display-4\">404 Page Not Found</h1>\r\n    </div>\r\n  )\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nclass Test extends Component {\r\n  state ={\r\n    title: '',\r\n    body: ''\r\n  }\r\n\r\n  componentDidMount(){\r\n    fetch('https://jsonplaceholder.typicode.com/posts/1')\r\n    .then(response => response.json())\r\n    .then(data => {this.setState({\r\n      title: data.title,\r\n      body: data.body\r\n    })})\r\n  }\r\n\r\n  // componentWillMount(){\r\n  //   console.log('componentWillMount')\r\n  // }\r\n\r\n  // componentDidUpdate(){\r\n  //   console.log('componentDidUpdate')\r\n  // }\r\n\r\n  // componentWillReceiveProps(nextProps, nextState){\r\n  //   console.log('componentDidUpdate')\r\n  // }\r\n\r\n  render() {\r\n    const {title, body} = this.state\r\n    return (\r\n      <div>\r\n       <h2>{title}</h2>\r\n       <p>{body}</p>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default Test","import React, {Component} from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport Contacts from './components/contacts/Contacts';\nimport AddContact from './components/contacts/AddContact';\nimport EditContact from './components/contacts/EditContact';\nimport Header from './components/layout/Header';\nimport About from './components/pages/About';\nimport NotFound from './components/pages/NotFound';\nimport Test from './components/test/Test';\n\n\nimport {Provider} from './context';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\nclass App extends Component {\n  render(){\n    return(\n// Чтоб подключить провайдер ( context.js) надо обернуть все в <Provider>\n      <Provider> \n        <Router>\n          <div className=\"app\">\n            <Header />\n            <div className=\"container\">\n            <Switch>\n              <Route exact path=\"/\" component={Contacts}/>\n              <Route exact path=\"/contact/add\" component={AddContact}/>\n              <Route exact path=\"/contact/edit/:id\" component={EditContact}/>\n              <Route exact path=\"/about\" component={About}/>\n              <Route exact path=\"/test\" component={Test}/>\n              <Route component={NotFound}/>\n            </Switch>\n              \n            </div>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nserviceWorker.unregister();\n"],"sourceRoot":""}